{"version":3,"sources":["assets/type.wav","components/Kajak.js","App.js","reportWebVitals.js","index.js"],"names":["Kajak","state","word","wordArray","newWord","revWord","playAudio","Audio","typeSound","play","handleChange","event","value","target","name","setState","arrayWord","Array","from","reverse","console","log","join","KajakWrapper","this","length","type","onChange","autoFocus","placeholder","className","Component","styled","div","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAAe,G,MAAA,IAA0B,kC,OCKnCA,E,4MACFC,MAAQ,CACJC,KAAM,GACNC,UAAW,GACXC,QAAS,GACTC,QAAS,I,EAGbC,UAAY,WACR,IAAIC,MAAOC,GAAWC,Q,EAG1BC,aAAe,SAACC,GACZ,EAAKL,YACL,IACMM,EADSD,EAAME,OACAD,MACRD,EAAME,OAAOC,KAC1B,EAAKC,SAAS,IAId,IAAIC,EAAYC,MAAMC,KAAK,EAAKjB,MAAMC,MACtCc,EAAYA,EAAUG,UACtBC,QAAQC,IAAIL,GACZ,IAAIX,EAAUW,EAAUM,KAAK,IACzBlB,EAAU,EAAKH,MAAMC,KAAKG,EAE9B,EAAKU,SAAS,CACVb,KAAMU,EACNR,QAASA,EACTC,QAASA,K,4CASjB,WACI,OAEI,eAACkB,EAAD,WAEI,+BAAKC,KAAKvB,MAAMC,KAAKuB,QAAU,EAAID,KAAKvB,MAAMC,KAAKsB,KAAKvB,MAAMI,QAAU,IAEpE,0BACJ,uBACIS,KAAK,OACLY,KAAK,OACLd,MAAOY,KAAKvB,MAAMC,KAClByB,SAAYH,KAAKd,aACjBkB,WAAS,EACTC,YAAY,oBAEZ,qBAAKC,UAAU,OAAf,SACJ,sL,GAxDIC,aAiEPR,EAAeS,IAAOC,IAAV,y5BAiDVjC,IC3GAkC,MARf,WACE,OACE,8BACA,cAAC,EAAD,OCKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bbbb54f2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/type.268221d2.wav\";","import React, { Component } from 'react';\nimport styled from \"styled-components\";\nimport useSound from 'use-sound';\nimport typeSound from \"../assets/type.wav\";\n\nclass Kajak extends Component {\n    state = {\n        word: \"\",\n        wordArray: [],\n        newWord: \"\",\n        revWord: \"\"\n    }\n\n    playAudio = () => {\n        new Audio (typeSound).play();\n    }\n\n    handleChange = (event) => {\n        this.playAudio();\n        const target = event.target;\n        const value = target.value;\n        const name = event.target.name;\n        this.setState({\n            \n            \n        })\n        let arrayWord = Array.from(this.state.word);\n        arrayWord = arrayWord.reverse();\n        console.log(arrayWord);\n        let revWord = arrayWord.join(\"\");\n        let newWord = this.state.word+revWord\n        \n        this.setState({\n            word: value,\n            newWord: newWord,\n            revWord: revWord\n        })\n\n        \n\n    }\n\n   \n\n    render() {\n        return (\n            \n            <KajakWrapper>\n                \n                <h1>{this.state.word.length >= 1 ? this.state.word+this.state.revWord : \" \"}\n                    \n                    <br/></h1>\n                <input\n                    name=\"word\"\n                    type=\"text\"\n                    value={this.state.word}\n                    onChange = {this.handleChange}\n                    autoFocus\n                    placeholder=\"find palindrome\"\n                    />\n                    <div className=\"wiki\">\n                <p>A palindrome is a word, number, phrase, or other sequence of characters which reads the same backward as forward, such as madam or racecar. </p>\n                </div>\n            </KajakWrapper>\n            \n            \n        );\n    }\n}\n\nexport const KajakWrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\nheight: 100vh;\ncolor: #495057;\nh1{\n    font-size: 8rem;\n    font-weight: 300;\n    margin-top: -10rem;\n}\n\ninput {\n    font-size: 3rem;\n    text-align: center;\n    border: none;\n    border-bottom: 1px solid grey;\n    width: auto;\n    outline: none;\n    text-transform: lowercase;\n    background: #ede0d4;\n    color: \"#343a40\";\n    opacity: 0.7;\n    font-family: 'Bitter', serif;\n    font-weight: 300;\n    ::placeholder {\n        \n        font-family: 'Bitter', serif;\n        font-size: 2rem;\n        font-weight: 300;\n        color: #6c757d;\n        opacity: 0.5;\n    }\n    \n}\n.wiki {\n        text-align: center;\n        width: 50vw;\n        opacity: 1;\n        height: 20vh;\n        font-weight: 200;\n        p {\n            margin-top: 8rem;\n        }\n    }\n\n`;\n\nexport default Kajak;","import './App.css';\nimport Kajak from \"./components/Kajak\";\n\n\nfunction App() {\n  return (\n    <div>\n    <Kajak />\n    </div>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}